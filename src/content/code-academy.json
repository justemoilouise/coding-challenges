[
  {
    "title": "Calculate the Mean and Mode",
    "description": "Given a list of numbers, return the list's mean and mode. If there are multiple modes, return the mode that occurs first.",
    "link": "https://www.codecademy.com/code-challenges/code-challenge-calculate-the-mean-and-mode-javascript",
    "tags": [ "Algorithmic Complexity", "Intermediate" ]
  },
  {
    "title": "Maximize stock trading profit",
    "description": "Given the daily values of a stock, create a function called <b>maxProfitDays()</b> that, given a list of integers, will return the index value of the two elements that represent the day on which one should have bought a share and the day on which one should have sold a share based on the max profit.<br /><br />A list of integers will represent the stock price at the beginning of each day for a week. You are required to buy and sell only once. You also must buy a stock before selling it.<br /><br />For example, given the list <b>[17, 11, 60, 25, 150, 75, 31, 120]</b>, you can assume that index 0 represents day 0 and index 7 represents day 7. In this case, purchasing on day 1 and selling on day 4 would yield the most profit.",
    "link": "https://www.codecademy.com/code-challenges/code-challenge-maximize-stock-trading-profit-javascript",
    "tags": [ "Algorithmic Complexity", "Intermediate" ]
  },
  {
    "title": "Prime Number Finder",
    "description": "Create a function that takes in a number, and returns all the prime numbers from <b>1</b> to <b>n</b> (inclusive). As a reminder, a prime number is a number that is only divisible by <b>1</b> and itself.",
    "link": "https://www.codecademy.com/code-challenges/code-challenge-maximize-stock-trading-profit-javascript",
    "tags": [ "Algorithmic Complexity", "Intermediate", "Arrays" ]
  },
  {
    "title": "Balanced Binary Search Tree",
    "description": "Given a sorted array of numbers, write a function to create a balanced binary search tree. A balanced BST has no more than one level of depth difference between the right and left sides of the tree.<br /><br />Each value in the array <b>a</b> should correspond to a node value. The return value will be the root node of the balanced tree. An empty array should return <b>null</b>.",
    "link": "https://www.codecademy.com/code-challenges/code-challenge-balanced-binary-search-tree-javascript",
    "tags": [ "Trees", "Intermediate" ]
  }
]
